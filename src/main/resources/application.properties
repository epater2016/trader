# LOGGING
logging.file=trader.log


# EMBEDDED SERVER CONFIGURATION (ServerProperties)
#server.port=8080
#server.address= # bind to a specific NIC
server.session-timeout= 3600
#server.context-parameters.*= Servlet context init parameters, e.g. server.context-parameters.a=alpha
#server.context-path= # the context path, defaults to '/'
#server.servlet-path= # the servlet path, defaults to '/'
#server.ssl.enabled=true # if SSL support is enabled
#server.ssl.client-auth= # want or need
#server.ssl.key-alias=
#server.ssl.ciphers= # supported SSL ciphers
#server.ssl.key-password=
#server.ssl.key-store=
#server.ssl.key-store-password=
#server.ssl.key-store-provider=
#server.ssl.key-store-type=
#server.ssl.protocol=TLS
#server.ssl.trust-store=
#server.ssl.trust-store-password=
#server.ssl.trust-store-provider=
#server.ssl.trust-store-type=
#server.tomcat.access-log-pattern= # log pattern of the access log
#server.tomcat.access-log-enabled=false # is access logging enabled
#server.tomcat.compression=off # is compression enabled (off, on, or an integer content length limit)
#server.tomcat.compressable-mime-types=text/html,text/xml,text/plain # comma-separated list of mime types that Tomcat will compress
#server.tomcat.internal-proxies=10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|\\
#        192\\.168\\.\\d{1,3}\\.\\d{1,3}|\\
#        169\\.254\\.\\d{1,3}\\.\\d{1,3}|\\
#        127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3} # regular expression matching trusted IP addresses
#server.tomcat.protocol-header=x-forwarded-proto # front end proxy forward header
#server.tomcat.protocol-header-https-value=https # value of the protocol header that indicates that the incoming request uses SSL
#server.tomcat.port-header= # front end proxy port header
#server.tomcat.remote-ip-header=x-forwarded-for
#server.tomcat.basedir=/tmp # base dir (usually not needed, defaults to tmp)
#server.tomcat.background-processor-delay=30; # in seconds
#server.tomcat.max-http-header-size= # maximum size in bytes of the HTTP message header
#server.tomcat.max-threads = 0 # number of threads in protocol handler
#server.tomcat.uri-encoding = UTF-8 # character encoding to use for URL decoding

# SECURITY (SecurityProperties)
#security.user.name=user # login username
#security.user.password= # login password
#security.user.role=USER # role assigned to the user
#security.require-ssl=false # advanced settings ...
#security.enable-csrf=false
#security.basic.enabled=false
#security.basic.realm=Spring
#security.basic.path= # /**
#security.basic.authorize-mode= # ROLE, AUTHENTICATED, NONE
#security.filter-order=0
#security.headers.xss=false
#security.headers.cache=false
#security.headers.frame=false
#security.headers.content-type=false
#security.headers.hsts=all # none / domain / all
#security.sessions=stateless # always / never / if_required / stateless
#security.ignored= # Comma-separated list of paths to exclude from the default secured paths

# DataSource settings: set here configurations for the database connection
spring.datasource.url = jdbc:mysql://localhost:3306/test
spring.datasource.username = root
spring.datasource.password = root
spring.datasource.driverClassName = com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Specify the DBMS
spring.jpa.database = MYSQL

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate settings are prefixed with spring.jpa.hibernate.*
spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.naming_strategy = org.hibernate.cfg.ImprovedNamingStrategy